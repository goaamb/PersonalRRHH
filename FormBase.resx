<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIAAoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////Af//
        /yn///9X////ev39/Yz9/f2K////df///07///8fAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////KP//
        /4j9/f3V/f39/v/////09P//5+f+/+no/v/4+P////////39/ff9/f3I////dP///xcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////Ef39
        /ZP9/f35+vn//6Kf3/9XUb7/LCSv/xoRq/8TCav/FAqq/xwTq/8zK67/Y16+/7Sy4v///////f396///
        /3f///8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /z79/f3d/////4B80P8cCqr/AgCq/wkAtv8SAL3/FgDB/xgMxf8YDMX/FgrE/xEFwf8IALj/BQCr/yoj
        qf+cmdL///////39/cL39/ciAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///9Z/f39+8zJ8v8tJbT/AgCw/xpG0v8ia9z/IWXY/yFq2f8fUNL/GgvC/xoNwv8aDsL/Gg7C/xoO
        w/8bDsb/EQXB/wIAq/9EP67/6un5//39/ef///8zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////S/////+wrOf/DgWv/wwAvP8gD8X/Nrjt/ynf9v8q1vT/K972/yi77f8aEMP/GgvB/xoO
        wv8aDsL/Gg7C/xoOwv8aDsL/Gw7G/wgAuf8fGKT/1dPt//39/ez///8lAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///yD9/f3xvrvu/wsBsv8TB8H/Gg3C/x8Pwv83rer/J8/y/ynH8P8qzvL/J6/q/xoR
        w/8aC8H/Gg7C/xoOwv8aDsL/Gg7C/xoOwv8aDsL/Gw/E/w0Bv/8cFKT/5OP1//39/dL///8HAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/f39vu3s//8cErn/EQW//xsPw/8ZDMH/Hw/C/zat6v8nz/L/Kcfw/yrO
        8v8nr+r/GhHD/xoLwf8aDsL/Gg7C/xoOwv8aDsL/Gg7C/xoOwv8aDsL/Gw/E/wkAvP85Mqz///////39
        /YsAAAAAAAAAAAAAAAAAAAAAAAAAAP///1H/////WlHP/wcAu/8bD8P/Gg7C/xkMwf8fD8L/Nq3q/yfP
        8v8px/D/Ks7y/yeu6v8ZCMH/GQG//xkFwP8aCMD/GgzC/xoOwv8aDsL/Gg7C/xoOwv8aDsL/Gw/G/wEA
        sP+Khsv//f39/P///yYAAAAAAAAAAAAAAAAAAAAA/f39ydDO+f8KALv/GQ3C/xoOwv8aDsL/GQzB/x8P
        wv82rer/J8/y/ynH8P8qzfL/J7Pr/x0yy/8dMMr/HTDL/xshx/8aCcH/GQC//xoNwv8aDsL/Gg7C/xoO
        wv8aDsL/FQnE/xoQqP/29f///f39lgAAAAAAAAAAAAAAAP///y3/////YlrX/wkAvf8aDsL/Gg7C/xoO
        wv8ZDMH/Hw/C/zat6v8nz/L/Kcfw/ynH8P8px/D/Kcrx/ynL8f8pyvH/KMLv/yal5/8fUtP/GQTA/xoM
        wv8aDsL/Gg7C/xoOwv8bD8T/AwCy/5SQ0//9/f3q////CwAAAAAAAAAA////c/z7//8mG8X/FQnB/xoO
        wv8aDsL/Gg7C/xkMwf8fD8L/Nq3q/yfP8v8px/D/Kcfw/ynH8P8nyfH/J8nw/ynJ8P8pyvH/KtLz/yrc
        9f8hbNn/GQK//xoOwv8aDsL/Gg7C/xoOwv8OAsD/QTm0//////////9AAAAAAAAAAAD9/f2t0c7+/xMH
        wP8YDML/Gg7C/xoOwv8aDsL/GQzB/x8Pwv82rer/J8/y/ynH8P8oxvD/K8nx/zbR8/831PP/K9Lz/yfG
        8P8px/D/Kcvx/ynM8f8cKcn/GQbA/xoOwv8aDsL/Gg7C/xcKxP8aEK7/9vX//////3oAAAAAAAAAAP39
        /dOoo/H/EAPA/xcKwf8ZDcL/Gg7C/xoOwv8ZDMH/Hw/C/zat6v8nz/L/Kcfw/ynN8f8qtev/MD/O/zI7
        zf9BkeP/LdDy/yjH8P8px/D/Ktf0/yBZ1f8ZAL7/Gg7C/xoOwv8aDsL/GAvE/wsAsP/T0fX//f39pQAA
        AAD///8J/f395ZOO6f8dFsX/IRjF/xsQw/8ZDMH/GAzB/xgLwf8fD8L/Nq3q/yfP8v8px/D/KtDy/yaq
        6P8VAL7/EQC6/ycfxv81zfL/J8nw/ynH8P8q1/T/IGnZ/xcAvv8ZDMH/GAzB/xoOwv8gFsf/EQq3/7u4
        6//9/f27AAAAAP///w39/f3pkYzo/yMfyP8uK8z/LCnL/ychyP8hGMX/HBDD/x8Pwv82rer/J8/y/ynH
        8P8qzvL/J7Dq/xscxf8aEML/IWnZ/yrQ8v8pyPD/Kcfw/yrX9P8hYtX/EwC6/xkPxf8mH8f/KibK/y8t
        zv8YE7z/tbHp/////8AAAAAA////Bf39/eCemez/Ix/I/ywpy/8tK8v/LizM/y8szP8sKMr/LyfK/zix
        6/8mzfH/Kcfw/ynH8P8pxvD/KLvt/yi77f8pz/L/Kcjw/ynH8P8pyfD/GsPw/2KC3P+5sdb/OjjF/ykn
        zP8uK8v/LivN/xgTu//DwPH//f39tQAAAAAAAAAA/f39xb65+f8oI8n/KyjL/y0qy/8tKsv/LSrL/ywo
        yv8zLMv/OLLr/yXN8f8ox/D/KMfw/yjH8P8pzPH/Kczx/yjH8P8mx/D/Jszx/ynZ9f8Zet//r6bi////
        /P+wr9j/Ih7H/ywpy/8tK83/HRi7/+Lf/f/9/f2VAAAAAAAAAAD9/f2V6uf//zYwzP8qJ8r/LSrL/y0q
        y/8tKsv/LCjK/zIqy/8/vO3/LNz1/y/W8/8q0fP/KM70/yjP9P8oz/T/Kc30/yrG8v8qruz/MHHa/4iC
        1v/69/L//f32/9va6P8sKcj/KyfL/ykmy/8wKr7//////////2IAAAAAAAAAAP///1X/////WlTU/ygl
        yv8tKcv/LSrL/y0qy/8tKsv/LSfK/0Bf2P9Edt3/QnHd/1SE2/9Xh9f/VofY/1eF2P9cgdb/aH3T/4SC
        0v/Dtt7//Pry//v79f////f/m5ng/yAdyP8tKsv/HBjF/2Ndz//9/f3+////JwAAAAAAAAAA8fHxE/39
        /fKkn+z/KibK/yonyv8tKsv/LSrL/y0qy/8tKsv/KiDJ/yocyP8cDsX/oJPb//Tp6f/m2+b/59zm/+vi
        6P/17+3///7z//3+9v/39/P/2trr/4eF3/8rKcv/KifK/y8szf8VD77/xMDz//39/c0AAAAAAAAAAAAA
        AAAAAAAA/f39mvn4//9MRtD/KSbK/ywpy/8tKsv/LSrL/y0qy/8tKsv/LSrL/yAcyP9qaNj////3//f3
        9P/29vT/9fX0//Pz8//y8vL/8vLy//n59f/Ly+D/PjzC/yMgyf8uLMz/IB3I/0U+yf//////////ZAAA
        AAAAAAAAAAAAAAAAAAD///8h/f39+LCs7v8yLcv/KCbK/y0qy/8tKsv/LSrL/y0qy/8tKsv/KifK/yso
        y//W1u3//f30//Ly8v/y8vL/8vLy//T18//39/P/9PTy////+P/o6Ob/MjDI/ygmzP8WD8H/y8j1//39
        /dz///8HAAAAAAAAAAAAAAAAAAAAAAAAAAD///93/////3x23v8tKcv/KSbK/y0qy/8tKsv/LSrL/y0q
        y/8tKsv/HhvI/2tp2P////X/9PXy//Ly8v/09PP/5ubu/+Li7//z8/P/8/Pz/6in5P8qKMr/EgzD/4V/
        4P//////////RQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9/f22/vz//25o2f8uKsv/KCXK/y0q
        y/8tKsv/LSrL/y0qy/8tKsv/HRrI/5WU4P////b/9fXz//r69f/Pz+P/PTrK/0hG0v9DQdD/JCLK/xYQ
        xP9rZdn///////39/YcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///w79/f3L/Pr//3p0
        3P80MMz/KCXK/ykmyv8tKsv/LSrL/y0qy/8qJ8r/IR3J/5KQ4P/7/PT////3//v78P8+PMn/HBnJ/x8c
        yP8eGMb/fXfe///////9/f2lAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /xD9/f25/////6ah6v9OSdL/LSrL/yclyv8oJcr/KifK/ywpy/8pJsr/HRrI/1VT0/+VlOH/fXzb/yYj
        yf8hHMf/QjvO/7Sv8P///////f39lgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD9/f2D/f39/O3r//+Yk+f/WVTV/zk1zf8sKcr/KCXK/ygkyv8nJMn/HBjH/xcT
        xv8kH8j/U03T/5+Z6v/9/P///f397P///2IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8x////qv39/fn/////2Nb//66q8f+Rjub/g3/h/4N+
        4v+Sjuf/sa3z/+Dd/////////f397v39/ZL///8cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////Jv///2/9/f2u/f393P39
        /fT9/f3+/f39/P39/fH9/f3V/f39pP///2H///8YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8F////Gv///yf///8l////FgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>